jobs:
  - name: x86-64-ubuntu-14-04-container-artifactory-cli_new_1
    type: runSh
    runtime:
      architecture: x86_64
      os: Ubuntu_14.04
      container: true
    flags:
      - x86-64
      - ubuntu-14-04
    steps:
      - IN: test-artifactory-cli_new_1
      - TASK:
        - script: echo "build number is $BUILD_NUMBER" > myfile.$BUILD_NUMBER.txt
        - script: jfrog rt u myfile.$BUILD_NUMBER.txt generic-local/myfile.$BUILD_NUMBER.txt
            
            

  - name: x86-64-ubuntu-14-04-container-kubernetes-cli_1
    type: runSh
    runtime:
      architecture: x86_64
      os: Ubuntu_14.04
      container: true
    flags:
      - x86-64
      - ubuntu-14-04
    steps:
      - IN: test-kubernetes-cli_1
      - TASK:
          name: should-list-kubernete-services
          script:
            #- export IMG=$(docker inspect --format='{{.Config.Image}}' reqExec.$BUILD_JOB_ID.0)
            #- test "$IMG" == "drydock/microbase:master"
            - kubectl get services
            
            
  - name: x86-64-ubuntu-14-04-container-gcloud-cli-1
    type: runSh
    runtime:
      architecture: x86_64
      os: Ubuntu_14.04
      container: true
    flags:
      - x86-64
      - ubuntu-16-04
    steps:
      - IN: test-gcloud-cli_1
      - TASK:
        - script:  gcloud compute instances list
        - script: echo "hello"
        - script: echo "TESTGCLOUDCLI_1_INTEGRATION_CREDENTIALFILE_PATH"
        - script: printenv
            

  - name: x86-64-ubuntu-14-04-container-gcr-cli_1
    type: runSh
    runtime:
      architecture: x86_64
      os: Ubuntu_14.04
      container: true
    flags:
      - x86-64
      - ubuntu-16-04
    steps:
      - IN: test-gcr-cli_1
      - TASK:
        - script: gcloud projects list
        - script: gcloud docker -- pull launcher.gcr.io/google/redis3
            

  - name: x86-64-ubuntu-14-04-container-gke-cli_1
    type: runSh
    runtime:
      architecture: x86_64
      os: Ubuntu_14.04
      container: true
    flags:
      - x86-64
      - ubuntu-16-04
    steps:
      - IN: test-gke-cli_1
      - TASK:
        - script: gcloud projects list
        - script: gcloud container clusters list
