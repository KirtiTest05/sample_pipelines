jobs:
  - name: x86-64-ubuntu-14-04-container-artifactory-cli_new
    type: runSh
    runtime:
      architecture: x86_64
      os: Ubuntu_14.04
      container: true
    flags:
      - x86-64
      - ubuntu-14-04
    steps:
      - IN: test-artifactory-cli_new
      - TASK:
          name: should-upload-file
          script:
            #- export IMG=$(docker inspect --format='{{.Config.Image}}' reqExec.$BUILD_JOB_ID.0)
            #- test "$IMG" == "drydock/microbase:master"
            - echo "build number is $BUILD_NUMBER" > myfile.$BUILD_NUMBER.txt
            - jfrog rt u myfile.$BUILD_NUMBER.txt generic-local/myfile.$BUILD_NUMBER.txt
            
            

  - name: x86-64-ubuntu-14-04-container-kubernetes-cli
    type: runSh
    runtime:
      architecture: x86_64
      os: Ubuntu_14.04
      container: true
    flags:
      - x86-64
      - ubuntu-14-04
    steps:
      - IN: test-kubernetes-cli
      - TASK:
          name: should-list-kubernete-services
          script:
            #- export IMG=$(docker inspect --format='{{.Config.Image}}' reqExec.$BUILD_JOB_ID.0)
            #- test "$IMG" == "drydock/microbase:master"
            - kubectl get services
            
            
  - name: x86-64-ubuntu-14-04-container-gcloud-cli
    type: runSh
    runtime:
      architecture: x86_64
      os: Ubuntu_14.04
      container: true
    flags:
      - x86-64
      - ubuntu-16-04
    steps:
      - IN: test-gcloud-cli
      - TASK:
          name: should-list-gcloud-instances
          script:
            #- export IMG=$(docker inspect --format='{{.Config.Image}}' reqExec.$BUILD_JOB_ID.0)
            #- test "$IMG" == "drydock/microbase:master"
            - gcloud compute instances list
            - echo "hello"
            - echo "$TESTGCLOUDCLI_INTEGRATION_CREDENTIALFILE_PATH"
            

  - name: x86-64-ubuntu-14-04-container-gcr-cli
    type: runSh
    runtime:
      architecture: x86_64
      os: Ubuntu_14.04
      container: true
    flags:
      - x86-64
      - ubuntu-16-04
    steps:
      - IN: test-gcr-cli
      - TASK:
          name: should-pull-docker-image
          script:
            #- export IMG=$(docker inspect --format='{{.Config.Image}}' reqExec.$BUILD_JOB_ID.0)
            #- test "$IMG" == "drydock/microbase:master"
            - gcloud projects list
            - gcloud docker -- pull launcher.gcr.io/google/redis3
            - docker tag redis3 gcr.io/push-1130/redis3:test
            - gcloud docker -- push gcr.io/push-1130/redis3:test
